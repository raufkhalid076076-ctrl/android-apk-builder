name: Build APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ✅ Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # ✅ Step 3: Install system dependencies
      - name: Install build dependencies
        run: |
          sudo apt update
          sudo apt install -y python3-pip git zip unzip openjdk-17-jdk wget
          pip install --upgrade pip
          pip install buildozer cython virtualenv

      # ✅ Step 4: Install Android SDK and accept licenses
      - name: Install Android SDK and accept licenses
        run: |
          export ANDROID_SDK_ROOT="$HOME/android-sdk"
          export ANDROID_HOME="$ANDROID_SDK_ROOT"
          export JAVA_HOME="/usr/lib/jvm/java-17-openjdk-amd64"
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH"

          mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
          cd "$ANDROID_SDK_ROOT/cmdline-tools"
          wget https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -O cmdtools.zip
          unzip -q cmdtools.zip
          mkdir -p latest
          mv cmdline-tools/* latest/

          # Accept all licenses cleanly (avoids broken pipe noise)
          yes | sdkmanager --licenses 2>/dev/null || true

          # Use STABLE build-tools version (36.1.0 is problematic!)
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;34.0.0"

          # Create symlink for sdkmanager in old location for Buildozer compatibility
          mkdir -p "$ANDROID_SDK_ROOT/tools/bin"
          ln -sf "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" "$ANDROID_SDK_ROOT/tools/bin/sdkmanager"
          ln -sf "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/avdmanager" "$ANDROID_SDK_ROOT/tools/bin/avdmanager"

      # ✅ Step 5: Link SDK to Buildozer's expected path
      - name: Configure Buildozer to use pre-installed SDK
        run: |
          mkdir -p "$HOME/.buildozer/android/platform"
          ln -sf "$HOME/android-sdk" "$HOME/.buildozer/android/platform/android-sdk"

      # ✅ Step 6: Build APK with Buildozer
      - name: Build APK
        run: |
          buildozer android debug

      # ✅ Step 7: Upload the generated APK
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-apk
          path: bin/*.apk